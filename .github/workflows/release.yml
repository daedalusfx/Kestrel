# .github/workflows/release.yml

name: Build and Release Kestrel

# این ورک‌فلو زمانی اجرا می‌شود که یک تگ جدید با پیشوند v (مثل v1.0 یا v1.2.1) پوش شود
on:
  push:
    tags:
      - 'v*'

jobs:
  build-executables:
    # این نام در رابط کاربری GitHub Actions نمایش داده می‌شود
    name: Build for ${{ matrix.os }}
    
    # این بخش باعث می‌شود که کار ما روی سه سیستم‌عامل مختلف اجرا شود
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # مرحله ۱: گرفتن کدهای پروژه از گیت‌هاب
      - name: Check out repository
        uses: actions/checkout@v3

      # مرحله ۲: نصب پایتون
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # می‌توانید نسخه پایتون را تغییر دهید

      # مرحله ۳: نصب کتابخانه‌های مورد نیاز
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller # نصب پکیجر

      # مرحله ۴: ساخت فایل اجرایی با PyInstaller
      - name: Build executable with PyInstaller
        run: |
          # در اینجا 'kestrel.py' نام فایل اصلی برنامه شماست. اگر نام دیگری دارد، آن را تغییر دهید.
          # --onefile: همه چیز را در یک فایل اجرایی جمع می‌کند
          # --windowed: کنسول سیاه (CMD) را در ویندوز هنگام اجرا نشان نمی‌دهد
          # --name: نام فایل خروجی را تعیین می‌کند
          pyinstaller --name kestrel --onefile --windowed kestrel.py

      # مرحله ۵: آماده‌سازی فایل‌ها برای آپلود
      - name: Prepare artifacts for release
        id: prepare_artifacts
        run: |
          # تعیین نام فایل بر اساس سیستم‌عامل
          if [ "${{ runner.os }}" == "Linux" ]; then
            ASSET_NAME="kestrel-linux"
            ASSET_PATH="dist/kestrel"
          elif [ "${{ runner.os }}" == "macOS" ]; then
            ASSET_NAME="kestrel-macos"
            ASSET_PATH="dist/kestrel"
          else # Windows
            ASSET_NAME="kestrel-windows.exe"
            ASSET_PATH="dist/kestrel.exe"
          fi
          
          # فشرده‌سازی فایل برای دانلود راحت‌تر
          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a "${ASSET_NAME}.zip" "${ASSET_PATH}"
            echo "ASSET_PATH=${ASSET_NAME}.zip" >> $GITHUB_OUTPUT
          else
            zip -j "${ASSET_NAME}.zip" "${ASSET_PATH}"
            echo "ASSET_PATH=${ASSET_NAME}.zip" >> $GITHUB_OUTPUT
          fi
          
          echo "ASSET_NAME=${ASSET_NAME}.zip" >> $GITHUB_OUTPUT

      # مرحله ۶: آپلود فایل اجرایی به بخش Releases
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          # این توکن به صورت خودکار توسط گیت‌هاب ساخته می‌شود
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # آدرس آپلود از روی تگ ساخته می‌شود
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.prepare_artifacts.outputs.ASSET_PATH }}
          asset_name: ${{ steps.prepare_artifacts.outputs.ASSET_NAME }}
          asset_content_type: application/zip

